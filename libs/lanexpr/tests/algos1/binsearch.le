let

  fun print_int(x: int) : void = let

     fun print_rec(x: int) : void =
     	 if !(x == 0) then (
	    print_rec(x / 10);
	    putc(48 + (x % 10))
	 )
     in 

     	if x < 0 then (
     	   putc(45);
	   print_rec(-x)
     	)

     	else if x == 0 then putc(48)
	else print_rec(x)
 

  fun printnl() : void = putc(10)

  fun printnl_int(x: int) : void = (
      print_int(x);
      printnl()
  )

  fun rank(arr: int, len: int, key: int) : int =
    let
      var beg : int = 0
      var end : int = len - 1
      var res : int = -1 
    in
    (
      while (beg < end + 1) do (
        let
	  var mid : int= beg + (end - beg) / 2
	  var mid_val : int = fmemget(arr + mid)
	in
	(
	  if (key < mid_val) then end = mid - 1
	  else if (key > mid_val) then beg = mid + 1
	  else (beg = end + 1; res = mid)
	)
      );

      res
    )

  fun test_empty() : void = printnl_int(rank(160, 0, 56))

  fun test1() : void =
  let
    var i : int = 0
  in
  (
    while (i < 10) do (
      fmemset(160 + i, i);
      i = i + 1
    )

    printnl_int(rank(160, 10, -50));
    i = 0;
    while (i < 10) do (
      printnl_int(rank(160, 10, i));
      i = i + 1
    );
    printnl_int(rank(160, 10, 63))
  )

  fun test2() : void =
  let
    var i : int = 0
  in
  (
    while (i < 10) do (
      fmemset(160 + i, i - 5);
      i = i + 1
    )

    printnl_int(rank(160, 10, -50));
    i = -10;
    while (i < 10) do (
      printnl_int(rank(160, 10, i));
      i = i + 1
    );
    printnl_int(rank(160, 10, 63))
  )

  fun test3() : void =
  let
    var i : int = 0
  in
  (
    while (i < 10) do (
      fmemset(160 + i, 2*i);
      i = i + 1
    )

    printnl_int(rank(160, 10, -50));
    i = 0;
    while (i < 20) do (
      printnl_int(rank(160, 10, i));
      i = i + 1
    );
    printnl_int(rank(160, 10, 63))
  )

in
 (
   test_empty();
   test1();
   test2();
   test3()
 )